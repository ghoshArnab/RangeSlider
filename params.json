{
  "name": "Rangeslider",
  "tagline": "A native javascript range slider plugin",
  "body": "#RangeSlider\r\nRangeSlider is a lightweight native javascript plugin that allows you to\r\nimplement a simple range slider in your interfaces.\r\n#How To Use\r\n##Setup\r\n\r\n1. Copy the js and css files from the build folder to the appropriate\r\n   directories in your project  \r\n2. Include _rangeslider.min.js_ in your documents scripts  \r\n3. Include _rangeslider.css_ in your stylesheet declarations    \r\n\r\n\r\n##Initialization\r\n\r\nTo initialize RangeSlider on a DOM Node **(preferably a div)**, just create \r\nan HTML element similar to:\r\n\r\n    <div id = 'my_range_slider' ></div>\r\n \r\n Then activate the slider via JS with:\r\n \r\n    var myRangeSlider = RangeSlider.create('#my_range_slider');\r\n\r\n>To access the properties and methods on the slider you must store it in a variable like shown above\r\n \r\n##Configuration\r\n  \r\n RangeSlider comes with some useful config options:\r\n \r\n1. **min**: The minimum value of the range  \r\n  _data attribute_: data-rs-min  \r\n  _default_: 0 \r\n2. **max**: The maximum value of the range  \r\n  _data attribute_: data-rs-max  \r\n  _deafult_:100   \r\n3. **steps**: Display slider with earmarked steps  \r\n _data attribute_: data-rs-steps  \r\n _default_:false  \r\n \r\n \r\n These config options can be set with either data attributes or as a JS config\r\n object passed to the constructor\r\n \r\n > Options set via data attributes will be **_overwritten_** if redeclared or reassigned\r\n in the javascript object  \r\n \r\n \r\n##Examples\r\n\r\n1. To produce the default slider with a range minimum of _**0**_ and a range maximum of\r\n  _**100**_\r\n\r\n        <div id = 'my_range_slider'></div>\r\n    \r\n        RangeSlider.create('#my_range_slider');\r\n\r\n2. To produce an unstepped slider with a range minimum of _**500**_ and a range maximum \r\n   of _**5000**_:\r\n\r\n        <div id = 'my_range_slider' data-rs-min = '500' \r\n            data-rs-max = '5000'>\r\n        </div>\r\n    \r\n        RangeSlider.create('#my_range_slider');\r\n    \r\n    > OR \r\n   \r\n        var config = {\r\n            min:500,\r\n            max:5000\r\n         };\r\n    \r\n        RangeSlider.create('#my_range_slider',config);\r\n\r\n3. To produce a stepped slider with a range minimum of _**1000**_, a range maximum of\r\n _**7200**_ and _**8**_ steps:  \r\n\r\n        <div id = 'my_range_slider' data-rs-min = '1000' \r\n            data-rs-max = '10000' data-rs-steps = '8'>\r\n        </div>\r\n    \r\n        RangeSlider.create('#my_range_slider');\r\n   \r\n    > OR\r\n   \r\n            var config = {\r\n                min:1000,\r\n                max:7200,\r\n                steps:8\r\n            };\r\n    \r\n            RangeSlider.create('#my_range_slider',config);\r\n    \r\n##Methods\r\n\r\n1. **setRange**: Sets the value of the slider to a provided value if it falls within \r\n   the minimum or maximum range.Will default to the minimum or maximum value if the value \r\n   provided is too low or too high  \r\n    `myRangeSlider.setRange(Number range);`\r\n2. **getRange**: Returns the current range value of the slider  \r\n    `myRangeSlider.getRange();`\r\n3. **reInit**:Recalculates offsets,width and positioning of the slider,useful when \r\n   the slider or parent  element has `(display:hidden)` set and is not initially \r\n   visible.    \r\n    `myRangeSlider.reInit();` \r\n\r\n##Callbacks\r\nThese are declared in the config object  \r\n\r\n1. **afterInit**: A function to be executed once the slider has been set up \r\n   successfully.The slider can be passed as an argument\r\n   \r\n        var config = {\r\n            afterInit:function(slider){\r\n                slider.setRange(50)\r\n            }\r\n        }\r\n        \r\n        RangeSlider.create('#my_range_slider',config);\r\n\r\n2. **onRangeChange**: A function to be executed whenever the value of the slider \r\n   changes.The slider can be passed as an argument\r\n   \r\n         var config = {\r\n            onRangeChange:function(slider){\r\n                alert(\"the new range value is\"+ slider.getRange());\r\n            }\r\n        }\r\n    \r\n        RangeSlider.create('#my_range_slider',config);\r\n        \r\n##Coming Soon\r\n* Dual Slider pointers\r\n* Slider style options (thin, normal, jumbo)\r\n* Vertical sliders",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}